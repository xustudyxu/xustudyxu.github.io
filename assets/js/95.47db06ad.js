(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{443:function(t,s,a){"use strict";a.r(s);var e=a(10),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http协议与tomcat服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议与tomcat服务器"}},[t._v("#")]),t._v(" HTTP协议与Tomcat服务器")]),t._v(" "),s("h2",{attrs:{id:"http协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议"}},[t._v("#")]),t._v(" HTTP协议")]),t._v(" "),s("h3",{attrs:{id:"浏览器和服务器的交互模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器和服务器的交互模式"}},[t._v("#")]),t._v(" 浏览器和服务器的交互模式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/02.png",alt:"001"}})]),t._v(" "),s("ul",[s("li",[t._v("如何实现客户端与服务端不同版本的交互呢")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/03.png",alt:"001"}})]),t._v(" "),s("blockquote",[s("p",[t._v("需要有个规范，就是HTTP协议")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("HTTP 协议（Hypertext Transfer Protocol, 超文本传输协议），是一个客户端请求和响应的标准协\n议，这个协议详细规定了浏览器和万维网服务器之间互相通信的规则。用户输入地址和端口号之后就可\n以从服务器上取得所需要的网页信息。")])]),t._v(" "),s("p",[t._v('通信规则规定了客户端发送给服务器的内容格式，也规定了服务器发送给客户端的内容格式。客户端\n发送给服务器的格式叫"'),s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v("请求协议")]),t._v('"；服务器发送给客户端的格式叫"'),s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v("响应协议")]),t._v('"。')],1),t._v(" "),s("p",[t._v("在浏览器中 F12可查看")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/01.png",alt:"001"}})]),t._v(" "),s("h3",{attrs:{id:"浏览器中的书写格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的书写格式"}},[t._v("#")]),t._v(" 浏览器中的书写格式")]),t._v(" "),s("p",[t._v("服务器端资源需要通过浏览器进行，此时由浏览器将我们给出的请求解析为满足 HTTP 协议的格式并\n发出。我们发出的请求格式需要按照浏览器规定的格式来书写，在浏览器中书写格式如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/04.png",alt:"001"}})]),t._v(" "),s("p",[t._v("当浏览器获取到信息以后，按照特定格式解析并发送即可。接收到服务器端给出的响应时，也按照\nHTTP 协议进行解析获取到各个数据，最后按照特定格式展示给用户。")]),t._v(" "),s("h3",{attrs:{id:"http协议的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http协议的特点"}},[t._v("#")]),t._v(" HTTP协议的特点")]),t._v(" "),s("ol",[s("li",[t._v("支持客户/服务器模式。")]),t._v(" "),s("li",[t._v("简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的 有 GET、POST。每种方法规定了客户与服务器联系的类型不同。由于 HTTP 协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。")]),t._v(" "),s("li",[t._v("灵活：HTTP 允许传输任意类型的数据对象。传输的类型由Content-Type加以标记。")]),t._v(" "),s("li",[t._v("无连接：无连接是表示每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。")])]),t._v(" "),s("ul",[s("li",[t._v("HTTP1.1 版本后支持可持续连接。通过这种连接,就有可能在建立一个 TCP 连接后,发送请求并得到回应，然后发送更多的请求并得到更多的回应.通过把建立和释放 TCP 连接的开销分摊到多个请求上，则对于每个请求而言，由于 TCP 而造成的相对开销被大大地降低了。而且， 还可以发送流水线请求,也就是说在发送请求 1 之后的回应到来之前就可以发送请求 2.也可以认为，一次连接发送多个请求，由客户机确认是否关闭连接，而服务器会认为这些请求分别来自不同的客户端。")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("无状态：HTTP 协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送 的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。")])]),t._v(" "),s("h3",{attrs:{id:"http之url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http之url"}},[t._v("#")]),t._v(" HTTP之URL")]),t._v(" "),s("p",[t._v("HTTP（超文本传输协议）是一个基于请求与响应模式的、应用层的协议，常基于 TCP 的连接方式，\n绝大多数的 Web 开发，都是构建在 HTTP 协议之上的 Web 应用。")]),t._v(" "),s("p",[t._v("HTTP URL (URL 是一种特殊类型的 URI，包含了用于查找某个资源的足够的信息)的格式 如下：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("abc_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主机名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("域名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("端口"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("访问的资源路径\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("http 表示要通过 HTTP 协议来定位网络资源；")]),t._v(" "),s("li",[t._v("host 表示合法的 Internet 主机域名或 者 IP 地址；")]),t._v(" "),s("li",[t._v("port 指定一个端口号，为空则使用缺省端口 80；")]),t._v(" "),s("li",[t._v("abs_path 指定请求资源的 URI； 如果 URL 中没有给出 abs_path，那么当它作为请求 URI 时，必\n须以“/”的形式给出，通常 这个工作浏览器自动帮我们完成。")])]),t._v(" "),s("h3",{attrs:{id:"http请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http请求"}},[t._v("#")]),t._v(" HTTP请求")]),t._v(" "),s("p",[t._v("HTTP 请求由三部分组成，分别是：请求行、请求头、请求正文。")]),t._v(" "),s("ul",[s("li",[t._v("请求协议第一行请求行")]),t._v(" "),s("li",[t._v("请求头就是键值对")])]),t._v(" "),s("p",[t._v("通过chrome浏览器， F12 —> Network查看。")]),t._v(" "),s("ol",[s("li",[t._v("Get请求(没有请求体(正文))")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/05.png",alt:"001"}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Post请求")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/06.png",alt:"001"}})]),t._v(" "),s("p",[s("strong",[t._v("格式")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("请求行\n请求头1\n请求头2\n…\n请求空行\n请求体\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("请求行以一个方法符号开头，以空格分开，后面跟着请求的 URI 和协议的版本。")]),t._v(" "),s("p",[t._v("格式如下：Method Request-URI HTTP-Version CRLF")]),t._v(" "),s("p",[t._v("​\tMethod 表示请求方法；")]),t._v(" "),s("p",[t._v("​\tRequest-URI 是一个统一资源标识符；")]),t._v(" "),s("p",[t._v("​\tHTTP-Version 表示请 求的 HTTP 协议版本；")]),t._v(" "),s("p",[t._v("​\tCRLF 表示回车和换行；")]),t._v(" "),s("h3",{attrs:{id:"http响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http响应"}},[t._v("#")]),t._v(" HTTP响应")]),t._v(" "),s("p",[t._v("在接收和解释请求消息后，服务器返回一个 HTTP 响应消息。HTTP 响应也是由三个部分组成，分别\n是：状态行、消息报头、响应正文。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/07.png",alt:"001"}})]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("状态行\n响应头1\n响应头2\n…\n响应空行\n响应体\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"消息头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息头"}},[t._v("#")]),t._v(" 消息头")]),t._v(" "),s("p",[t._v("HTTP 消息由客户端到服务器的请求和服务器到客户端的响应组成。请求消息和响应消息都是由开始\n行（对于请求消息，开始行就是请求行，对于响应消息，开始行就是状态行）， 消息报头（可选），空\n行（只有 CRLF 的行），消息正文（可选）组成。")]),t._v(" "),s("p",[t._v("每一个报头域都是由"),s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v('名字+":"+空格+值')]),t._v("组成，消息报头域的名字是大小写无关的。")],1),t._v(" "),s("p",[s("strong",[t._v("请求头")])]),t._v(" "),s("p",[t._v("请求报头允许客户端向服务器端传递请求的附加信息以及客户端自身的信息。")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v("Referer")]),t._v("：该请求头指明请求从哪里来 。")],1)]),t._v(" "),s("p",[t._v("如果是地址栏中输入地址访问的都没有该请求头 地址栏输入地址，通过请求可以看到，此时多了\n一个 Referer 的请求头，并且后面的值 为该请求从哪里发出。比如：百度竞价，只能从百度来的才\n有效果，否则不算;通常用来做统计工作、 防盗链。")]),t._v(" "),s("p",[s("strong",[t._v("响应头")])]),t._v(" "),s("p",[t._v("响应报头允许服务器传递不能放在状态行中的附加响应信息，以及关于服务器的信息和 对 RequestURI 所标识的资源进行下一步访问的信息。")]),t._v(" "),s("ul",[s("li",[t._v("Location：Location响应报头域用于重定向接受者到一个新的位置。\n"),s("ul",[s("li",[t._v("Location响应报头域，常用在更换域名的时候。")])])])]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("response."),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendRedirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v("Refresh")]),t._v("：自动跳转（单位是秒），可以在页面通过meta标签实现，也可在后台实现。")],1)]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("<meta http-equiv="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refresh"')]),t._v(" content="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3;url=http://www.baidu.com"')]),t._v(">\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"tomcat服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat服务器"}},[t._v("#")]),t._v(" Tomcat服务器")]),t._v(" "),s("h3",{attrs:{id:"什么是tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是tomcat"}},[t._v("#")]),t._v(" 什么是Tomcat")]),t._v(" "),s("p",[t._v("Tomcat 是一个符合 JavaEE WEB 标准的最小的 "),s("strong",[t._v("WEB 容器")]),t._v("，所有的 JSP 程序一定要有 WEB 容器的支\n持才能运行，而且在给定的 WEB 容器里面都会支持事务处理操作。")]),t._v(" "),s("p",[t._v("Tomcat 是由 Apache 提供的（www.apache.org）提供的可以用安装版和解压版，安装版可以在服务\n中出现一个 Tomcat 的服务，免安装没有，开发中使用免安装版。 Tomcat 简单的说就是一个运行 Java\n的网络服务器，"),s("strong",[t._v("底层是 Socket 的一个程序")]),t._v("，它也是 JSP 和 Servlet 的一个容器。 Tomcat 是 Apache 软\n件基金会（Apache Software Foundation）的 Jakarta 项目中的一个核心项目，由 Apache、Sun和其\n他一些公司及个人共同开发而成。")]),t._v(" "),s("p",[t._v("由于有了 Sun 的参与和支持，最新的 Servlet 和 JSP 规范总是能在 Tomcat 中得到体现。因为\nTomcat 技术先进、性能稳定，而且免费，因而深受 Java 爱好者的喜爱并得到了部分软件开发商的认\n可，成为目前比较流行的 Web 应用服务器。")]),t._v(" "),s("p",[t._v("Tomcat 服务器是一个免费的开放源代码的 Web 应用服务器，属于轻量级应用服务器， 在中小型系\n统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 JSP 程序的首选。 对于一个初学者来\n说，可以这样认为，当在一台机器上配置好 Apache 服务器，可利用它响应 HTML（标准通用标记语言\n下的一个应用）页面的访问请求。实际上 Tomcat 部分是 Apache 服务器的扩展，但它是独立运行的，\n所以当你运行 tomcat 时，它实际上作为一个与 Apache 独立的进程单独运行的。")]),t._v(" "),s("p",[t._v("当配置正确时，Apache 为 HTML 页面服务，而 Tomcat 实际上是在运行 JSP 页面和 Servlet。另外，\nTomcat 和 IIS 等 Web 服务器一样，具有处理 HTML 页面的功能，另外它还是 一个 Servlet 和 JSP 容\n器，独立的 Servlet 容器是 Tomcat 的默认模式。不过，Tomcat 处理静态 HTML 的能力不如 Apache\n服务器。")]),t._v(" "),s("h3",{attrs:{id:"tomcat-总结架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-总结架构"}},[t._v("#")]),t._v(" Tomcat 总结架构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/19.png",alt:"001"}})]),t._v(" "),s("h3",{attrs:{id:"安装tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装tomcat"}},[t._v("#")]),t._v(" 安装Tomcat")]),t._v(" "),s("p",[t._v("运行 Tomcat 需要 JDK 的支持【Tomcat 会通过"),s("font",{attrs:{color:"#DC4040",size:"4",face:"黑体"}},[t._v(" JAVA_HOME ")]),t._v("找到所需要的 JDK】。 安装就是解压缩\n过程。启动 Tomcat，能访问则算安装好了")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/08.png",alt:"001"}})]),t._v(" "),s("ol",[s("li",[t._v("下载解压Tomcat9")]),t._v(" "),s("li",[t._v("解压后目录结构")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/09.png",alt:"001"}})]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("启动 Tomcat (在 tomcat 的安装目录下的 bin 目录 使用命令行启动 tomcat)")]),t._v(" "),s("p",[t._v("方式一:双击脚本文件启动")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/10.png",alt:"10"}})]),t._v(" "),s("p",[t._v("方式二:使用脚本命令启动")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/11.png",alt:"001"}})])]),t._v(" "),s("li",[s("p",[t._v("服务器启动成功")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/12.png",alt:"001"}})])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ol",[s("li",[t._v("Tomcat默认占用端口8080。（注意端口冲突问题）")]),t._v(" "),s("li",[t._v("如果需要使用服务器，启动成功后，该启动窗口不要关闭。")])])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("打开浏览器，输入http://localhost:8080/ 访问")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/13.png",alt:"001"}})]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("调用 shutdown 命令关闭Tomcat服务器")])]),t._v(" "),s("h3",{attrs:{id:"tomcat目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat目录结构"}},[t._v("#")]),t._v(" Tomcat目录结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/14.png",alt:"001"}})]),t._v(" "),s("ol",[s("li",[t._v("bin：启动和关闭 tomcat 的 bat 文件")]),t._v(" "),s("li",[t._v("conf：配置文件server.xml 该文件用于配置 server 相关的信息，比如 tomcat 启动的端口号，配\n置主机(Host) ；web.xml 文件配置与 web 应用（web 应用相当于一个 web站点）；tomcatuser.xml 配置用户名密码和相关权限")]),t._v(" "),s("li",[t._v("lib：该目录放置运行 tomcat 运行需要的 jar 包")]),t._v(" "),s("li",[t._v("logs：存放日志，当我们需要查看日志的时候，可以查询信息")]),t._v(" "),s("li",[t._v("webapps：放置我们的 web 应用")]),t._v(" "),s("li",[t._v("work 工作目录：该目录用于存放 jsp 被访问后生成对应的 server 文件和.class 文件")])]),t._v(" "),s("h3",{attrs:{id:"idea配置tomcat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idea配置tomcat"}},[t._v("#")]),t._v(" IDEA配置Tomcat")]),t._v(" "),s("ol",[s("li",[t._v('选择 "Appliction Servers"，点击右侧的 "+" 号，选择 "Tomcat Server"')])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/15.png",alt:"001"}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("设置 Tomcat 的安装目录")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/16.png",alt:"001"}})]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("配置Tomcat服务器完成")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/Servlet/images/01/17.png",alt:"001"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);