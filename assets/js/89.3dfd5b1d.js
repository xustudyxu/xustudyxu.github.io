(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{435:function(t,v,_){"use strict";_.r(v);var a=_(10),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据结构内容介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构内容介绍"}},[t._v("#")]),t._v(" 数据结构内容介绍")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.bilibili.com/video/BV1E4411H73v/?spm_id_from=333.337.search-card.all.click&vd_source=6aafd031757cd8c1dbbb98344fb3d363",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习视频地址"),v("OutboundLink")],1)]),t._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#数据结构与算法内容介绍"}},[t._v("数据结构与算法内容介绍")]),v("ul",[v("li",[v("a",{attrs:{href:"#先看几个经典的算法面试题"}},[t._v("先看几个经典的算法面试题")])]),v("li",[v("a",{attrs:{href:"#数据结构和算法的重要性"}},[t._v("数据结构和算法的重要性")])])])]),v("li",[v("a",{attrs:{href:"#数据结构与算法的关系"}},[t._v("数据结构与算法的关系")])]),v("li",[v("a",{attrs:{href:"#一个五子棋程序"}},[t._v("一个五子棋程序")])]),v("li",[v("a",{attrs:{href:"#约瑟夫-josephu-问题-丢手帕问题"}},[t._v("约瑟夫(Josephu)问题(丢手帕问题)")])]),v("li",[v("a",{attrs:{href:"#其它常见算法问题"}},[t._v("其它常见算法问题")])]),v("li",[v("a",{attrs:{href:"#线性结构和非线性结构"}},[t._v("线性结构和非线性结构")]),v("ul",[v("li",[v("a",{attrs:{href:"#线性结构"}},[t._v("线性结构")])]),v("li",[v("a",{attrs:{href:"#非线性结构"}},[t._v("非线性结构")])])])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"数据结构与算法内容介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法内容介绍"}},[t._v("#")]),t._v(" 数据结构与算法内容介绍")]),t._v(" "),v("h3",{attrs:{id:"先看几个经典的算法面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#先看几个经典的算法面试题"}},[t._v("#")]),t._v(" 先看几个经典的算法面试题")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("字符串匹配问题：")]),t._v(" "),v("ol",[v("li",[t._v('有一个字符串 strl=""硅硅谷尚硅谷你尚硅尚硅谷你尚硅谷你尚硅你好""，和一个子串 str2="尚硅谷你尚硅你"')]),t._v(" "),v("li",[t._v("现在要判断str1是否含有str2，如果存在，就返回第一次出现的位置,如果没有，则返回-1")]),t._v(" "),v("li",[t._v("要求用最快的速度来完成匹配")]),t._v(" "),v("li",[t._v("你的思路是什么?")])])]),t._v(" "),v("li",[v("p",[t._v("暴力匹配[简单，但是效率低]")])]),t._v(" "),v("li",[v("p",[t._v("KMP算法《部分匹配表》")])]),t._v(" "),v("li",[v("p",[t._v("汉诺塔游戏")]),t._v(" "),v("p",[t._v("请完成汉诺塔游戏的代码:要求:(1)将A塔的所有圆盘移动到C塔。并且规定，(2)小圆盘上不能放大圆盘，(3)在三根柱子之间一次只能移动一个圆盘")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.6cjdfqhykfk0.webp",alt:"image"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("八皇后问题")]),t._v(" "),v("p",[t._v("八皇后问题，是一个古老而著名的问题，是回溯算法的典型案例。该问题是国际西洋棋棋手马克斯·贝瑟尔于1848年提出:在8×8格的国际象棋上摆放八个皇后，使其不能互相攻击，即:任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法。【92】=>分治算法")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.6mx54tr8fpo0.webp",alt:"image"}})]),t._v(" "),v("ul",[v("li",[t._v("马踏棋盘算法介绍和游戏演示\n"),v("ol",[v("li",[t._v("马踏棋盘算法也被称为骑士周游问题")]),t._v(" "),v("li",[t._v("将马随机放在国际象棋的8×8棋盘Board[0~7][0~7]的某个方格中，马按走棋规则(马走日字)进行移动。要求每个方格只进入一次，走遍棋盘上全部64个方格")]),t._v(" "),v("li",[t._v("会使用到"),v("strong",[t._v("图的深度优化遍历算法(DFS)")]),t._v("+"),v("strong",[t._v("贪心算法")]),t._v("优化")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.40adwy0xl060.webp",alt:"image"}})]),t._v(" "),v("h3",{attrs:{id:"数据结构和算法的重要性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法的重要性"}},[t._v("#")]),t._v(" 数据结构和算法的重要性")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("算法是程序的灵魂")]),t._v("，优秀的程序可以在海量数据计算时，依然保持高速计算")]),t._v(" "),v("li",[t._v("一般来讲程序会使用了内存计算框架(比如Spark)和缓存技术(比如Redis等)来优化程序,再深入的思考一下,这些计算框架和缓存技术，它的核心功能是哪个部分呢?")]),t._v(" "),v("li",[t._v("拿实际工作经历来说,在Unix下开发服务器程序，功能是要支持上千万人同时在线，在上线前，做内测，一切OK,可上线后，服务器就支撑不住了,公司的CTO对代码进行优化，再次上线，坚如磐石。你就能感受到程序是有灵魂的，就是算法。")]),t._v(" "),v("li",[t._v("目前程序员面试的门槛越来越高，很多一线IT公司(大厂)，都会有数据结构和算法面试题(负责的告诉你，肯定有的)")]),t._v(" "),v("li",[t._v("如果你不想永远都是代码工人,那就花时间来研究下数据结构和算法")])]),t._v(" "),v("h2",{attrs:{id:"数据结构与算法的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法的关系"}},[t._v("#")]),t._v(" 数据结构与算法的关系")]),t._v(" "),v("ol",[v("li",[t._v("数据data结构(structure)是一门研究组织数据方式的学科，有了编程语言也就有了数据结构.学好数据结构可以编写出更加漂亮,更加有效率的代码。")]),t._v(" "),v("li",[t._v("要学习好数据结构就要多多考虑如何将生活中遇到的问题,用程序去实现解决.")]),t._v(" "),v("li",[v("strong",[t._v("程序=数据结构+算法")])]),t._v(" "),v("li",[v("strong",[t._v("数据结构是算法的基础")]),t._v(",换言之，想要学好算法，需要把数据结构学到位。")])]),t._v(" "),v("p",[t._v("看几个实际编程中遇到的问题")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.6m9ly6wyld80.webp",alt:"image"}})]),t._v(" "),v("p",[t._v("小结:需要使用到单链表数据结构")]),t._v(" "),v("h2",{attrs:{id:"一个五子棋程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一个五子棋程序"}},[t._v("#")]),t._v(" 一个五子棋程序")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.3p17gh021v20.webp",alt:"image"}})]),t._v(" "),v("p",[t._v("如何判断游戏的输赢，并可以完成存盘退出和继续上局的功能")]),t._v(" "),v("ol",[v("li",[t._v("棋盘二维数组=→>(稀疏数组)->写入文件【存档功能】")]),t._v(" "),v("li",[t._v("读取文件-》稀疏数组-》二维数组-》棋盘【接上局】")])]),t._v(" "),v("h2",{attrs:{id:"约瑟夫-josephu-问题-丢手帕问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#约瑟夫-josephu-问题-丢手帕问题"}},[t._v("#")]),t._v(" 约瑟夫(Josephu)问题(丢手帕问题)")]),t._v(" "),v("ol",[v("li",[t._v("Josephu问题为:设编号为1，2，… n的n个人围坐一圈，约定编号为k (<=k<=n)的人从1开始报数，数到m 的那个人出列，它的下一位又从1开始报数，数到m的那个人又出列，依次类推，直到所有人出列为止，由此产生一个出队编号的序列。")]),t._v(" "),v("li",[t._v("提示:用一个不带头结点的循环链表来处理.Josephu问题:先构成一个有n个结点的单循环链表（单向环形链表），然后由k结点起从1开始计数，计到m时，对应结点从链表中删除，然后再从被删除结点的下一个结点又从1开始计数，直到最后一个结点从链表中删除算法结束。")]),t._v(" "),v("li",[t._v("小结:完成约瑟夫问题，需要使用到单向环形链表这个数据结构")])]),t._v(" "),v("h2",{attrs:{id:"其它常见算法问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其它常见算法问题"}},[t._v("#")]),t._v(" 其它常见算法问题")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting1@master/20221215/image.6x4lyx2poog0.webp",alt:"image"}})]),t._v(" "),v("ol",[v("li",[t._v("修路问题=→>最小生成树(加权值)【数据结构】＋普利姆算法")]),t._v(" "),v("li",[t._v("最短路径问题=→>图+弗洛伊德算法")]),t._v(" "),v("li",[t._v("汉诺塔→>分支算法")]),t._v(" "),v("li",[t._v("八皇后问题=→>回溯法")])]),t._v(" "),v("h2",{attrs:{id:"线性结构和非线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性结构和非线性结构"}},[t._v("#")]),t._v(" 线性结构和非线性结构")]),t._v(" "),v("p",[t._v("数据结构包括:"),v("strong",[t._v("线性结构")]),t._v("和"),v("strong",[t._v("非线性结构")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性结构"}},[t._v("#")]),t._v(" 线性结构")]),t._v(" "),v("ol",[v("li",[t._v("线性结构作为最常用的数据结构，其特点是"),v("strong",[t._v("数据元素之间存在一对一")]),t._v("的线性关系")]),t._v(" "),v("li",[t._v("线性结构有两种不同的存储结构，即"),v("strong",[t._v("顺序存储结构(数组)"),v("strong",[t._v("和")]),t._v("链式存储结构(链表)")]),t._v("。顺序存储的线性表称为顺序表，顺序表中的"),v("strong",[t._v("存储元素是连续")]),t._v("的")]),t._v(" "),v("li",[t._v("链式存储的线性表称为链表，链表中的"),v("strong",[t._v("存储元素不一定是连续")]),t._v("的，元素节点中存放数据元素以及相邻元素的地址信息")]),t._v(" "),v("li",[t._v("线性结构常见的有:"),v("strong",[t._v("数组、队列、链表和栈")]),t._v("，后面我们会详细讲解.")])]),t._v(" "),v("h3",{attrs:{id:"非线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非线性结构"}},[t._v("#")]),t._v(" 非线性结构")]),t._v(" "),v("p",[t._v("非线性结构包括:二维数组，多维数组，广义表，"),v("strong",[t._v("树结构")]),t._v("，"),v("strong",[t._v("图结构")])])])}),[],!1,null,null,null);v.default=s.exports}}]);