(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{542:function(r,t,v){"use strict";v.r(t);var s=v(10),e=Object(s.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"springmvc-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-简介"}},[r._v("#")]),r._v(" SpringMVC 简介")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.bilibili.com/video/BV1Ry4y1574R?from=search&seid=13810950434984257553&spm_id_from=333.337.0.0",target:"_blank",rel:"noopener noreferrer"}},[r._v("学习视频地址"),t("OutboundLink")],1)]),r._v(" "),t("h2",{attrs:{id:"什么是mvc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvc"}},[r._v("#")]),r._v(" 什么是MVC"),t("badge",{attrs:{text:"SpringMVC(v5.3.1)"}})],1),r._v(" "),t("p",[r._v("MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分")]),r._v(" "),t("p",[r._v("M：Model，模型层，指工程中的JavaBean，作用是处理数据")]),r._v(" "),t("p",[r._v("JavaBean分为两类：")]),r._v(" "),t("ul",[t("li",[r._v("一类称为实体类Bean：专门存储业务数据的，如 Student、User 等")]),r._v(" "),t("li",[r._v("一类称为业务处理 Bean：指 Service 或 Dao 对象，专门用于处理业务逻辑和数据访问。")])]),r._v(" "),t("p",[r._v("V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据")]),r._v(" "),t("p",[r._v("C：Controller，控制层，指工程中的servlet，作用是接收请求和响应浏览器")]),r._v(" "),t("ol",[t("li",[r._v("表现层（UI）：通俗讲就是展现给用户的界面，即用户在使用一个系统的时候他的所见所得。")]),r._v(" "),t("li",[r._v("业务逻辑层（BLL）：针对具体问题的操作，也可以说是对数据层的操作，对数据业务逻辑处理。")]),r._v(" "),t("li",[r._v("数据访问层（DAL）：该层所做事务直接操作数据库，针对数据的增添、删除、修改、更新、查找等。")])]),r._v(" "),t("p",[t("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/SpringMVC/images/01/07.png",alt:"07"}})]),r._v(" "),t("p",[r._v("MVC的工作流程：\n用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果找到相应的View视图，渲染数据后最终响应给浏览器")]),r._v(" "),t("h2",{attrs:{id:"什么是springmvc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是springmvc"}},[r._v("#")]),r._v(" 什么是SpringMVC")]),r._v(" "),t("p",[r._v("SpringMVC是Spring的一个后续产品，是Spring的一个子项目")]),r._v(" "),t("p",[r._v("SpringMVC 是 Spring 为表述层开发提供的一整套完备的解决方案。在表述层框架历经 Strust、WebWork、Strust2 等诸多产品的历代更迭之后，目前业界普遍选择了 SpringMVC 作为 Java EE 项目表述层开发的"),t("strong",[r._v("首选方案")]),r._v("。")]),r._v(" "),t("blockquote",[t("p",[r._v("注：三层架构分为表述层（或表示层）、业务逻辑层、数据访问层，表述层表示前台页面和后台servlet")])]),r._v(" "),t("h2",{attrs:{id:"springmvc的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的特点"}},[r._v("#")]),r._v(" SpringMVC的特点")]),r._v(" "),t("ul",[t("li",[t("strong",[r._v("Spring 家族原生产品")]),r._v("，与 IOC 容器等基础设施无缝对接")]),r._v(" "),t("li",[t("strong",[r._v("基于原生的Servlet")]),r._v("，通过了功能强大的"),t("strong",[r._v("前端控制器DispatcherServlet")]),r._v("，对请求和响应进行统一处理")]),r._v(" "),t("li",[r._v("表述层各细分领域需要解决的问题"),t("strong",[r._v("全方位覆盖")]),r._v("，提供"),t("strong",[r._v("全面解决方案")])]),r._v(" "),t("li",[t("strong",[r._v("代码清新简洁")]),r._v("，大幅度提升开发效率")]),r._v(" "),t("li",[r._v("内部组件化程度高，可插拔式组件"),t("strong",[r._v("即插即用")]),r._v("，想要什么功能配置相应组件即可")]),r._v(" "),t("li",[t("strong",[r._v("性能卓著")]),r._v("，尤其适合现代大型、超大型互联网项目要求")])]),r._v(" "),t("h2",{attrs:{id:"springmvc内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springmvc内容"}},[r._v("#")]),r._v(" SpringMVC内容")]),r._v(" "),t("p",[t("img",{attrs:{src:"https://jsdelivr.codeqihan.com//gh/xustudyxu/image-hosting@master/studynotes/SpringMVC/images/01/01.png",alt:"01"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);